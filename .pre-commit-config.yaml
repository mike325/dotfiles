# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.1.0
    hooks:
      - id: check-xml
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-added-large-files
      - id: check-case-conflict
      - id: detect-private-key
      - id: check-docstring-first
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
        exclude: |
            (?x)^(
                shell/init/profile|
                shell/init/shellrc.sh|
                shell/init/shellrc.csh
            )$
      - id: check-vcs-permalinks
      - id: check-symlinks
      - id: mixed-line-ending
      # - id: pretty-format-json
  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 2.1.5  # or master
    hooks:
      # TODO: Migrate some checks to python to make them "universal"
      # - id: bundler-audit
      # - id: check-mailmap   # Depends on sh, does not work in Powershell/Windows
      - id: forbid-binary
      # - id: forbid-space-in-indent
      # - id: git-check       # Configure in .gitattributes, Depends on sh, does not work in Powershell/Windows
      # - id: git-dirty       # Configure in .gitignore
      # - id: markdownlint    # Configure in .mdlrc, depends on Ruby
      # - id: protect-first-parent  # TODO: This fails in GH CI since Ubuntu 20.04 has an old Git version
      # - id: require-ascii
      # - id: script-must-have-extension
      # - id: script-must-not-have-extension
      # - id: shellcheck
      # - id: shfmt
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.1.10
    hooks:
      - id: remove-crlf
      - id: remove-tabs
        exclude: |
            (?x)^(
                UltiSnips/.*|
                Makefile.*|
                \.git.*|
                .*\.make|
                .*\.go$
            )$
        # args: [ '--whitespaces-count', '2' ]  # defaults to: 4
  - repo: https://github.com/sirosen/check-jsonschema
    rev: 0.10.0
    hooks:
      - id: check-github-workflows
      - id: check-github-actions
      # - id: check-jsonschema
      # - id: check-azure-pipelines
      # - id: check-travis
  - repo: https://github.com/PyCQA/flake8
    rev: '4.0.1'  # Use the sha / tag you want to point at
    hooks:
      - id: flake8
        # args: [
        #   '--max-line-length=120',
        #   '--ignore=E203,E226,E231,E261,E262,E265,E302,W391'
        # ]
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: 'v0.931'  # Use the sha / tag you want to point at
    hooks:
      - id: mypy
        # args: [--ignore-missing-imports]
  - repo: https://github.com/psf/black
    rev: 21.12b0  # Latest: 21.7b0 or stable
    hooks:
      - id: black
        language_version: python3
        args: [ --check, --diff ]
  - repo: local
    hooks:
      - id: shellcheck
        name: shellcheck
        description: Shell correctness
        entry: shellcheck
        args: ['-f', 'gcc', '-x', '-e', '1117']
        exclude: |
            (?x)^(
                shell/zfunctions/.*|
                shell/scripts/.*|
                bin/converter.sh|
                .*\.(t)?csh|
                .*zsh.*|
                .*\.zsh
            )$
        language: system
        types: [shell]
      - id: shfmt
        name: shfmt
        description: Format shell scripts
        entry: shfmt
        args: ['-i', '4', '-s', '-ci', '-kp', '-d']
        exclude: |
            (?x)^(
                shell/zfunctions/.*|
                shell/scripts/.*|
                .*\.(t)?csh|
                .*zsh.*|
                .*\.zsh
            )$
        types: [shell]
        language: system
        # language: golang
        # minimum_pre_commit_version: 2.4.0
        # additional_dependencies: [mvdan.cc/sh/v3/cmd/shfmt@v3.3.1]
      # - id: luacheck
      #   name: luacheck
      #   description: Lua check
      #   entry: luacheck
      #   args: ['--max-cyclomatic-complexity', '15', '--std', 'luajit', '--formatter', 'plain']
      #   language: system
      #   types: [lua]
      # - id: flake8
      #   name: flake8
      #   description: '`flake8` is a command-line utility for enforcing style consistency across Python projects.'
      #   entry: flake8
      #   args: [
      #     '--max-line-length=120',
      #     '--ignore=E203,E226,E231,E261,E262,E265,E302,W391'
      #   ]
      #   language: system
      #   types: [python]
      #   require_serial: true
