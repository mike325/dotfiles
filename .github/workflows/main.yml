name: dotfiles
on: [push, pull_request]

jobs:
  parameter-checks-build:
    name: Testing install with parameters in Ubuntu latest
    runs-on: ubuntu-latest

    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v2
      - name: OS update
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get upgrade -y
      - name: OS Info
        run: |
          sudo apt-get install -y wget
          wget https://raw.githubusercontent.com/dylanaraps/neofetch/master/neofetch && chmod +x ./neofetch && ./neofetch
      - name: Install dependencies
        run: |
          sudo apt-get install -y curl git shellcheck python3-setuptools python-setuptools python3-pip
      - name: Full install
        run: |
          ./install.sh --verbose --portables
          ./install.sh --verbose --bin
          ./install.sh --verbose --shell  --shell_scripts --shell_frameworks=bash
          ./install.sh --verbose --emacs
          ./install.sh --verbose --python=3
          ./install.sh --verbose --neovim dev
          ./install.sh --verbose --git
      - name: Full force install
        run: |
          sudo ./install.sh --force --packages

  linux-standalone:
    name: Testing standalone script installation in Ubuntu latest
    runs-on: ubuntu-latest

    env:
      GITHUB: true

    steps:
      - name: OS Info
        run: |
          sudo apt install -y wget
          wget https://raw.githubusercontent.com/dylanaraps/neofetch/master/neofetch && chmod +x ./neofetch && ./neofetch
      - name: OS update
        run: |
          sudo apt update --fix-missing
          sudo apt upgrade -y
      - name: Install dependencies
        run: |
          sudo apt install -y wget curl git shellcheck python3-setuptools python-setuptools
          sudo apt install -y python3-pip
          sudo pip3 install --upgrade pip
          pip3 --version
      - name: Fetch script
        run: |
          wget https://raw.githubusercontent.com/Mike325/dotfiles/master/install.sh
          chmod +x ./install.sh
      - name: Full install
        run: |
          ./install.sh --verbose

  linux-build:
    name: Testing install script in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-20.04, ubuntu-22.04 ]
    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v2
      - name: OS Info
        run: |
          sudo apt install -y wget
          wget https://raw.githubusercontent.com/dylanaraps/neofetch/master/neofetch && chmod +x ./neofetch && ./neofetch
      - name: OS update
        run: |
          sudo apt update --fix-missing
          sudo apt upgrade -y
      - name: Install dependencies
        run: |
          sudo apt install -y curl git shellcheck python3-setuptools python-setuptools
          sudo apt install -y python3-pip
          sudo pip3 install --upgrade pip
          pip3 --version
      - name: Full install
        run: |
          ./install.sh --verbose
      - name: Full force install
        run: |
          ./install.sh --verbose --force
      - name: Packages install
        run: |
          sudo ./install.sh --verbose --packages --only

  osx-build:
    name: Testing install script in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macOS-latest, macos-11, macos-12 ]
    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          brew install shellcheck
      - name: Full install
        run: |
          ./install.sh --verbose
      - name: Full force install
        run: |
          ./install.sh --verbose --force

  windows-build:
    name: Testing install script in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-latest, windows-2022, windows-2019 ]
    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v2
      # - name: Enable Chocolatey and Scoop
      #   shell: powershell
      #   run: |
      #     # ./init.ps1
      #     Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
      #     $env:PATH = "$env:USERPROFILE\.local\bin;$env:PATH"
      #     $env:PATH = "$env:APPDATA\Neovim\bin;$env:PATH"
      - name: Install dependencies
        shell: bash
        run: |
          choco install curl -y
          # scoop install curl
      - name: Full install
        shell: bash
        run: |
          ./install.sh --verbose
      - name: Force install
        shell: bash
        run: |
          ./install.sh --verbose --force
      - name: Packages install
        shell: bash
        run: |
          ./install.sh --verbose --packages scoop --only
